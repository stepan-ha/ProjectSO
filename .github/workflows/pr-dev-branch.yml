name: Validate PR on dev branch

on:
  pull_request:
    types: [opened, synchronize]
    branches: [dev]
    paths:
      - 'CRM/Project/force-app/**'

jobs:
  validate-deployment-on-dev-org:
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'dependabot[bot]' }}

    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: '18.18.0'

      - name: Verify Node.js version
        run: node -v

      - name: 'Checkout source code'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 'Install Salesforce CLI'
        run: |
          wget https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz
          mkdir ~/sfdx
          tar xJf sfdx-linux-x64.tar.xz -C ~/sfdx --strip-components 1
          echo "$HOME/sfdx/bin" >> $GITHUB_PATH
          ~/sfdx/bin/sfdx version

      - name: 'Installing sfdx git delta'
        run: |
          echo y | sfdx plugins:install sfdx-git-delta
          sfdx plugins

      - name: 'Installing java'
        run: |
          sudo apt-get update
          sudo apt install default-jdk

      - name: 'Installing SFDX scanner'
        run: sfdx plugins:install @salesforce/sfdx-scanner

      - name: 'Authenticate to Integration Org'
        run: sfdx auth:sfdxurl:store -f ./CRM/Project/authFile.json -s -a integration

      - name: 'Create delta packages for new, modified or deleted metadata'
        run: |
          mkdir changed-sources
          sfdx sgd:source:delta --to "HEAD" --from "HEAD^" --output changed-sources/ --generate-delta --source force-app/

      - name: 'Scan code'
        run: |
          cd changed-sources
          sfdx scanner:run --format sarif --target './**/*.cls' --category "Design,Best Practices,Performance" --outfile 'apexScanResults.sarif'
          cd ..

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: changed-sources/apexScanResults.sarif

      - name: 'Check-only deploy delta changes - run all tests'
        run: |
          sfdx force:source:deploy -p "changed-sources/force-app" --checkonly --testlevel RunLocalTests --json

      - name: 'Deploy destructive changes (if any)'
        run: sfdx force:mdapi:deploy -d "changed-sources/destructiveChanges" --checkonly --ignorewarnings
